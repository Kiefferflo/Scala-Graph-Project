[0m[[0m[0mdebug[0m] [0m[0m> Exec(collectAnalyses, None, Some(CommandSource(network-1)))[0m
[0m[[0m[0mdebug[0m] [0m[0munmatched Processing event for requestId None: None[0m
[0m[[0m[0mdebug[0m] [0m[0mEvaluating tasks: Compile / collectAnalyses[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning task... Cancel: Signal, check cycles: false, forcegc: true[0m
[0m[[0m[0mdebug[0m] [0m[0mUnhandled notification received: initialized: JsonRpcNotificationMessage(2.0, initialized, {})[0m
[0m[[0m[0mdebug[0m] [0m[0mUnhandled notification received: textDocument/didOpen: JsonRpcNotificationMessage(2.0, textDocument/didOpen, {"textDocument":{"uri":"file:///home/cytech/scala-graph-project/src/main/scala/undirected/SimpleGraphDefaultImpl.scala","languageId":"scala","version":1,"text":"package undirected\n\n/** Default implementation for [[SimpleGraph]]\n  * @param vertices vertex set\n  * @param edges edges set\n  * @tparam V type for vertices\n  */\ncase class SimpleGraphDefaultImpl[V](vertices : Set[V], edges : Set[Edge[V]]) extends SimpleGraph[V] {\n    /** @inheritdoc */\n    def neighborsOf(v: V): Option[Set[V]] =\n      if (!(vertices contains v)) None else Some(vertices filter { edges contains Edge(v, _) })\n\n    /** @inheritdoc */\n    def + (v: V): SimpleGraphDefaultImpl[V] =\n      SimpleGraphDefaultImpl(vertices + v, edges)\n\n    /** @inheritdoc */\n    def - (v: V): SimpleGraphDefaultImpl[V] =\n      SimpleGraphDefaultImpl(vertices - v, edges filterNot { e => Set(e._1, e._2) contains v })\n\n    /** @inheritdoc */\n    def +| (e: Edge[V]): SimpleGraphDefaultImpl[V] =\n      SimpleGraphDefaultImpl(vertices ++ Set(e._1, e._2), edges + e)\n\n    /** @inheritdoc */\n    def -| (e: Edge[V]): SimpleGraphDefaultImpl[V] =\n      SimpleGraphDefaultImpl(vertices, edges - e)\n\n    /** @inheritdoc */\n    def withoutEdge: SimpleGraphDefaultImpl[V] =\n      SimpleGraphDefaultImpl(vertices, Set.empty[Edge[V]])\n\n    /** @inheritdoc */\n    def withAllEdges: SimpleGraphDefaultImpl[V] =\n      SimpleGraphDefaultImpl(vertices, for (v1 <- vertices ; v2 <- vertices) yield Edge(v1, v2))\n}\n"}})[0m
[0m[[0m[0mdebug[0m] [0m[0manalysis location (/home/cytech/scala-graph-project/target/scala-2.13/zinc/inc_compile_2.13.zip,true)[0m
[0m[[0m[32msuccess[0m] [0m[0mTotal time: 0 s, completed Mar 16, 2022, 2:55:23 PM[0m
[0m[[0m[0mdebug[0m] [0m[0munmatched Done event for requestId None: None[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(shell, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0mForcing garbage collection...[0m
